---
- hosts: all
  tasks:
    - name: Install emacs (no X)
      become: true
      apt:
        name: emacs-nox
    - name: Install emacs (X11) is installed
      when: x11_enabled|bool
      become: true
      apt:
        name: emacs
    - name: Install dependencies of pdf-tools package
      when: x11_enabled|bool
      become: true
      apt:
        pkg:
          - autoconf
          - automake
          - g++
          - gcc
          - libpng-dev
          - libpoppler-dev
          - libpoppler-glib-dev
          - libpoppler-private-dev
          - libz-dev
          - make
          - pkg-config
    - name: Install full texlive distro
      when: x11_enabled|bool
      become: true
      apt:
        pkg: texlive-full

# Emacs-conf repo steps

    - name: Install git for emacs config cloning
      become: true
      apt:
        pkg: git
    - name: Ensure ~/dev/conf/ exists for emacs config
      file:
        path: "{{ ansible_env.HOME}}/dev/conf"
        state: directory
        mode: '0755'
    - name: Check ~/dev/conf/jiby-config cloned
      register: jibyconf_folder
      stat:
        path: "{{ ansible_env.HOME}}/dev/conf/jiby-conf"
    - name: Clone the jiby-conf repo from bundle
      when: not jibyconf_folder.stat.exists
      # Ideally use the git ansible module instead, but it doesn't do bundle-file-cloning like git CLI
      shell: "git clone /vagrant/ {{ ansible_env.HOME}}/dev/conf/jiby-conf"
    # # TODO: Register the remote bundle before fetching from it
    # - name: Update the emacs-conf repo from bundle
    #   when: emacsconf_folder.stat.exists and emacsconf_folder.stat.isdir
    #   shell: "git fetch /vagrant/data/jiby-emacsconf.bundle {{ ansible_env.HOME}}/dev/conf/emacs-conf -b stowage"

# Deployment via stow

    - name: Install stow for deployment of emacs conf
      become: true
      apt:
        pkg: stow
    - name: Deploy the emacs-conf repo via stow
      shell: "stow --dir ~/dev/conf/jiby-conf/stow --target {{ ansible_env.HOME}}/ {{ item }}"
      loop:
        - bash
        - git
        - emacs
        - emacs-vanilla
        - emacs-packages
        - emacs-external
    # Debian/Ubuntu emacs package ships a systemd user service in
    # /usr/lib/systemd/user/emacs.service, no need to unstow our own
    # in ~/.config/ (which is now broken due to systemd user daemon
    # login management, whatever that means)
    - name: Ensure emacs daemon service enabled
      systemd:
        scope: user
        name: emacs
        enabled: yes
        state: started
