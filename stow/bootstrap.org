#+TITLE: Bootstrapping a configuration

In order for my configuration (especially Emacs) to become +sentient+
useful, I need to be able to launch a single command which bootstraps
the entire environment.

This would involve reading my config files, and toggling the ones that
are relevant, like (in Emacs) enabling X11-related config when the
screen supports graphics. While this git repository contains many
files, this specific one is only a guide to which ones do what.

Each of the folders below are self-contained "packages" meant to be
used with [[https://www.gnu.org/software/stow/][GNU Stow]]. If enabled ("stowed"), they reach many places of
the home folder, such as adding a script under =~/bin/= and creating a
dotfile under =~/.mbsyncrc=. These are the main packages:

- [[file:emacs][emacs]] :: Base Emacs package
- [[file:emacs-vanilla][emacs-vanilla]] :: Emacs config in "vanilla" mode (no internet)
- [[file:emacs-packages][emacs-packages]] :: Emacs configuration with packages (internet)
- [[file:emacs-x11][emacs-x11]] :: Settings for graphical interfaces
- [[file:emacs-external][emacs-external]] :: For packages relying on other binaries
- [[file:emacs-termux][emacs-termux]] :: Only applicable to Termux (Android terminal)


And here's what I manually append to my =~/.emacs= file to auto-load all
these on Emacs startup.

#+BEGIN_SRC emacs-lisp
(cd "~/.emacs.d/jb/")
(load-file "bootstrap.el")
#+END_SRC

* Allow git pushes on master
:PROPERTIES:
:CREATED:  [2019-04-19 Thu 23:21]
:ID:       6fa38e90-c065-449a-8481-bfac9ea985c8
:END:

This entire folder is stored as git repo, which is set to receive new
versions of the master branch as "updates" (instead of rejecting the
push to checked out branch, as is default)

#+begin_src shell
git config --local  receive.denyCurrentBranch updateInstead
#+end_src

More info in the git-config manual:

#+CAPTION: man git-config(1)
#+begin_example :tangle no
       receive.denyCurrentBranch
	   [...]

	   Another option is "updateInstead" which will update the working tree if
	   pushing into the current branch. This option is intended for
	   synchronizing working directories when one side is not easily
	   accessible via interactive ssh (e.g. a live web site, hence the
	   requirement that the working directory be clean). This mode also comes
	   in handy when developing inside a VM to test and fix code on different
	   Operating Systems.
#+end_example

